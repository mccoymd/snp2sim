args = commandArgs(trailingOnly = TRUE)
if(length(args) == 0){
table <- fread(file = "clusterres_dihedaral_pca_coords.csv", sep = ",", data.table = FALSE, header = TRUE)
} else {
table <- fread(file = args[1], sep = ",", data.table = FALSE, header = TRUE)
}
library(data.table)
library(ggplot2)
library(Rtsne)
library(plotly)
library(plyr)
library(htmlwidgets)
library(markovchain)
args = commandArgs(trailingOnly = TRUE)
if(length(args) == 0){
table <- fread(file = "clusterres_dihedaral_pca_coords.csv", sep = ",", data.table = FALSE, header = TRUE)
} else {
table <- fread(file = args[1], sep = ",", data.table = FALSE, header = TRUE)
}
table <- table[,colSums(table != 0) > 0]
if (length(args) > 0) {
outputDir = paste(args[2],"/",sep = "")
} else {
outputDir = ""
}
pca <- prcomp(table[,c(-1)], scale. = TRUE)
#pull pca and add cluster
pca_vals <- as.data.frame(pca$x)
#get 90% variance pca number
summary <- data.frame(summary(pca)$importance)
cumsum <- as.vector(summary[3,])
numpca <- length(cumsum[cumsum<.9])
#run k means on the 90% pcas and plot
#k <- kmeans(pca_vals[,c(1:numpca)], 3, nstart=25, iter.max=1000)
pamk <- pamk(pca_vals[,c(1:numpca)], krange = 3:10, usepam = FALSE)
library(fpc)
library(data.table)
library(ggplot2)
library(plotly)
library(htmlwidgets)
library(fpc)
library(markovchain)
args = commandArgs(trailingOnly = TRUE)
if(length(args) == 0){
table <- fread(file = "clusterres_dihedaral_pca_coords.csv", sep = ",", data.table = FALSE, header = TRUE)
} else {
table <- fread(file = args[1], sep = ",", data.table = FALSE, header = TRUE)
}
table <- table[,colSums(table != 0) > 0]
if (length(args) > 0) {
outputDir = paste(args[2],"/",sep = "")
} else {
outputDir = ""
}
pca <- prcomp(table[,c(-1)], scale. = TRUE)
table <- table[,colSums(table != 0) > 0]
table <- fread(file = "clusterres_dihedaral_pca_coords.csv", sep = ",", data.table = FALSE, header = TRUE)
table <- fread(file = "../../../pca/clusterres_dihedaral_pca_coords.csv", sep = ",", data.table = FALSE, header = TRUE)
table <- table[,colSums(table != 0) > 0]
if (length(args) > 0) {
outputDir = paste(args[2],"/",sep = "")
} else {
outputDir = ""
}
pca <- prcomp(table[,c(-1)], scale. = TRUE)
#pull pca and add cluster
pca_vals <- as.data.frame(pca$x)
#get 90% variance pca number
summary <- data.frame(summary(pca)$importance)
cumsum <- as.vector(summary[3,])
numpca <- length(cumsum[cumsum<.9])
#run k means on the 90% pcas and plot
#k <- kmeans(pca_vals[,c(1:numpca)], 3, nstart=25, iter.max=1000)
pamk <- pamk(pca_vals[,c(1:numpca)], krange = 3:10, usepam = FALSE)
pca_vals$pamk <- as.factor(pamk$pamobject$clustering)
x <- pamk$pamobject$clustering
trans <- markovchainFit(x)
clusters <- data.frame(frame = c(1:nrow(pamk$pamobject$clustering)), cluster = pamk$pamobject$clustering)
nrow(pamk$pamobject$clustering)
length(pamk$pamobject$clustering)
